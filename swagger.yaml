openapi: 3.0.1
info:
  title: Redmine API
  description: |
    Redmine exposes some of its data through a REST API. This API provides 
    access and basic CRUD operations (create, update, delete) for the resources 
    described below. The API supports both XML and JSON formats.
  version: '3.5'
externalDocs:
  description: Redmine Rest API Reference
  url: 'http://www.redmine.org/projects/redmine/wiki/Rest_api'
servers:
  - url: ''
security:
  - api_key: []
  - BasicAuth: []
tags:
  - name: Issues
    description: 'Status : Stable, Note : , Availlability : 1.0'
  - name: Projects
    description: 'Status : Stable, Note : , Availlability : 1.0'
paths:
  '/issues.{format}':
    get:
      tags:
        - Issues
      summary: Listing issues
      description: >
        Returns a paginated list of issues. By default, it returns open issues
        only.  

        NB: operators containing ">", "<" or "=" should be hex-encoded so
        they're parsed correctly. Most evolved API clients will do that for you
        by default, but for the sake of clarity the following examples have been
        written with no such magic feature in mind.
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
        - name: offset
          in: query
          description: |
            skip this number of issues in response (optional)  
          allowEmptyValue: true
          schema:
            type: integer
        - name: limit
          in: query
          description: number of issues per page (optional)
          schema:
            type: integer
        - name: sort
          in: query
          description: 'column to sort with. Append :desc to invert the order.'
          schema:
            type: string
        - name: project_id
          in: query
          description: >-
            get issues from the project with the given id (a numeric value, not
            a project identifier).
          schema:
            type: integer
        - name: subproject_id
          in: query
          description: >-
            get issues from the subproject with the given id. You can use
            project_id=XXX&subproject_id=!* to get only the issues of a given
            project and none of its subprojects.
          schema:
            type: string
        - name: tracker_id
          in: query
          description: get issues from the tracker with the given id
          schema:
            type: integer
        - name: status_id
          in: query
          description: >-
            get issues with the given status id only. Possible values: open,
            closed, * to get open and closed issues, status id
          schema:
            type: string
        - name: assigned_to_id
          in: query
          description: >-
            get issues which are assigned to the given user id. me can be used
            instead an ID to fetch all issues from the logged in user (via API
            key or HTTP auth)
          schema:
            type: string
        - name: cf_x
          in: query
          description: >-
            get issues with the given value for custom field with an ID of x.
            (Custom field must have 'used as a filter' checked.)
          schema:
            type: string
      responses:
        '200':
          description: |
            Success
          content:
            application/json:
              schema:
                required:
                  - issues
                  - limit
                  - offset
                  - total_count
                type: object
                properties:
                  issues:
                    type: array
                    items:
                      $ref: '#/components/schemas/Issue'
                  total_count:
                    type: integer
                  offset:
                    type: integer
                  limit:
                    type: integer
              example:
                issues:
                  - id: 23359
                    project:
                      id: 1
                      name: Redmine
                    tracker:
                      id: 3
                      name: Patch
                    status:
                      id: 1
                      name: New
                    priority:
                      id: 4
                      name: Normal
                    author:
                      id: 332
                      name: Go MAEDA
                    category:
                      id: 12
                      name: Translations
                    subject: Change Japanese translation for label_commits_per_author
                    description: "I suggest changing the translation for label_commits_per_author from \"起票者別のコミット\" to \"作成者別のコミット\".\r\n\r\nJapanese translation for field_author has been changed from \"起票者\" to \"作成者\" by #2798. But the word \"起票者\" is still used in label_commits_per_author. I think it should be changed to \"作成者\" for consistency."
                    done_ratio: 0
                    created_on: '2016-07-18T12:13:59.000Z'
                    updated_on: '2016-07-18T12:13:59.000Z'
                  - id: 23357
                    project:
                      id: 1
                      name: Redmine
                    tracker:
                      id: 1
                      name: Defect
                    status:
                      id: 10
                      name: Needs feedback
                    priority:
                      id: 5
                      name: High
                    author:
                      id: 115781
                      name: Sebastian Paluch
                    category:
                      id: 9
                      name: Email notifications
                    subject: Broken links in email notification
                    description: "It seems that Redmine version 3.3.0 has broken links generation in email notifications for news (at least), with 3.2.0 noone was reporting such problem.\r\n\r\nI have a news publish that includes following description:\r\n\r\n<pre>\r\nNew software version#1267 has been released. It is ...\r\n\r\n{{include(myproject:100-0_Alpha_2_(rev_93029))}}\r\n\r\nh3. Feel free to report new issues\r\n\r\n* \"myproject\":/redmine/projects/myproject/issues/new\r\n</pre>\r\n\r\nIn email notification \r\n* the first link to version#1267 has been generated correctly, \r\n* the last one is missing server name that should be added automatically: \r\nhttp://redmine/projects/myproject/issues/new but should be http://host/redmine/projects/myproject/issues/new\r\n\r\nIncluded wiki (myproject:100-0_Alpha_2_(rev_93029)) is in different project then the news and includes:\r\n\r\n<pre>\r\nh3. Requirements\r\n\r\n* Service Pack version#1272 or newer\r\n\r\n{{include(myproject:Update_Instruction)}}\r\n\r\n...\r\n\r\n</pre>\r\n\r\nIn email notification \r\n* the link to version#1272 has been generated wrong, it is missing server name: \r\nhttp://redmine/versions/1272 but should be http://host/redmine/versions/1272\r\n\r\n\r\nIncluded wiki (myproject:Update_Instruction) is in different project then the news and includes:\r\n\r\n<pre>\r\nh3. Download\r\n\r\nAll pre-production software releases are available on the \"shared network location\":file://host\\full\\path\\to\\directory. \r\n\r\n...\r\n\r\n</pre>\r\n\r\nIn email notification \r\n* the link to \"shared network location\" has been generated wrong, all \"\\\" has been replaced with a code %5: \r\nfile://\\\\host%5full%5path%5to%5directory\r\nthe link does not work and for some reason, it is not even possible to copy it from Outlook into clipboard\r\n\r\n<pre>\r\nEnvironment:\r\n  Redmine version                3.3.0.stable\r\n  Ruby version                   2.1.8-p440 (2015-12-16) [i386-mingw32]\r\n  Rails version                  4.2.6\r\n  Environment                    production\r\n  Database adapter               Mysql2\r\nSCM:\r\n  Subversion                     1.8.11\r\n  Git                            2.7.4\r\n  Filesystem                     \r\nRedmine plugins:\r\n  computed_custom_field          0.0.2\r\n  inside_avatar                  1.0.2\r\n  issue_filters                  1.0.1\r\n  redmine_agile                  1.4.1-3\r\n  redmine_checklists             3.1.1-1\r\n  redmine_custom_columns         1.1.0\r\n  redmine_favorite_projects      2.0.2-2\r\n  redmine_version_fixed_issues   1.0.1\r\n  sidebar_hide                   0.0.7\r\n</pre>"
                    done_ratio: 0
                    custom_fields:
                      - id: 2
                        name: Resolution
                        value: ''
                      - id: 4
                        name: Affected version
                        value: '110'
                    created_on: '2016-07-18T10:53:45.000Z'
                    updated_on: '2016-07-18T12:14:17.000Z'
                total_count: 4579
                offset: 0
                limit: 2
            application/xml:
              example: >-
                <issues total_count="4579" offset="0" limit="2" type="array">
                <issue> <id>23359</id> <project id="1" name="Redmine"/> <tracker
                id="3" name="Patch"/> <status id="1" name="New"/> <priority
                id="4" name="Normal"/> <author id="332" name="Go MAEDA"/>
                <category id="12" name="Translations"/> <subject> Change
                Japanese translation for label_commits_per_author </subject>
                <description> </description> <start_date/> <due_date/>
                <done_ratio>0</done_ratio> <estimated_hours/>
                <created_on>2016-07-18T12:13:59Z</created_on>
                <updated_on>2016-07-18T12:13:59Z</updated_on> <closed_on/>
                </issue> <issue> <id>23357</id> <project id="1" name="Redmine"/>
                <tracker id="1" name="Defect"/> <status id="10" name="Needs
                feedback"/> <priority id="5" name="High"/> <author id="115781"
                name="Sebastian Paluch"/> <category id="9" name="Email
                notifications"/> <subject>Broken links in email
                notification</subject> <description> </description>
                <start_date/> <due_date/> <done_ratio>0</done_ratio>
                <estimated_hours/> <custom_fields type="array"> <custom_field
                id="2" name="Resolution"> <value/> </custom_field> <custom_field
                id="4" name="Affected version"> <value>110</value>
                </custom_field> </custom_fields>
                <created_on>2016-07-18T10:53:45Z</created_on>
                <updated_on>2016-07-18T12:14:17Z</updated_on> <closed_on/>
                </issue> </issues>
    post:
      tags:
        - Issues
      summary: Creating an issue
      description: Creating a new issue
      externalDocs:
        description: Redmine Issue Documentation
        url: 'https://www.redmine.org/projects/redmine/wiki/Rest_Issues'
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: Issue Scheme
              required:
                - issue
              type: object
              properties:
                issue:
                  title: Issue
                  required:
                    - project_id
                    - status_id
                    - tracker_id
                  type: object
                  properties:
                    project_id:
                      type: integer
                    tracker_id:
                      type: integer
                    status_id:
                      type: string
                    priority_id:
                      type: integer
                    subject:
                      type: string
                    description:
                      type: string
                    category_id:
                      type: integer
                    fixed_version_id:
                      type: string
                      description: >
                        'ID of the Target Versions (previously called 'Fixed
                        Version' and still referred to as such in the API)'
                    assigned_to_id:
                      type: string
                      description: >
                        'ID of the user to assign the issue to (currently no
                        mechanism to assign by name)'
                    parent_issue_id:
                      type: string
                      description: |
                        'ID of the parent issue'
                    custom_fields:
                      type: string
                      description: |
                        'See Custom fields'
                    watcher_user_ids:
                      type: string
                      description: |
                        'Array of user ids to add as watchers (since 2.3.0)'
                    is_private:
                      type: boolean
                      description: >
                        'Use true or false to indicate whether the issue is
                        private or not'
                    estimated_hours:
                      type: string
                      description: |
                        'Number of hours estimated for issue'
                  description: ''
              description: ''
              externalDocs:
                description: Redmine Project API Documentation
                url: 'https://www.redmine.org/projects/redmine/wiki/Rest_Projects'
        required: false
      responses:
        '200':
          description: Success
          content: {}
      x-codegen-request-body-name: BodyJson
    x-swagger-router-controller: getIssues
    x-a127-apply: {}
  '/issues/{issue_id}.{format}':
    get:
      tags:
        - Issues
      summary: Showing an issue
      parameters:
        - name: issue_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: number
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - issue
                type: object
                properties:
                  issue:
                    $ref: '#/components/schemas/Issue'
    put:
      tags:
        - Issues
      summary: Updating an issue
      parameters:
        - name: issue_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: number
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: Issue Scheme
              required:
                - issue
              type: object
              properties:
                issue:
                  title: Issue
                  type: object
                  properties:
                    project_id:
                      type: integer
                    tracker_id:
                      type: integer
                    status_id:
                      type: string
                    priority_id:
                      type: integer
                    subject:
                      type: string
                    description:
                      type: string
                    category_id:
                      type: integer
                    assigned_to_id:
                      type: string
                      description: >
                        'ID of the user to assign the issue to (currently no
                        mechanism to assign by name)'
                    parent_issue_id:
                      type: string
                      description: |
                        'ID of the parent issue'
                    custom_fields:
                      type: string
                      description: |
                        'See Custom fields'
                    watcher_user_ids:
                      type: string
                      description: |
                        'Array of user ids to add as watchers (since 2.3.0)'
                    is_private:
                      type: boolean
                      description: >
                        'Use true or false to indicate whether the issue is
                        private or not'
                    estimated_hours:
                      type: string
                      description: |
                        'Number of hours estimated for issue'
                  description: ''
              description: ''
              externalDocs:
                description: Redmine Project API Documentation
                url: 'https://www.redmine.org/projects/redmine/wiki/Rest_Projects'
        required: false
      responses:
        '200':
          description: Success
          content: {}
    delete:
      tags:
        - Issues
      summary: Deleting an issue
      parameters:
        - name: issue_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: number
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          headers:
            X-dummy:
              schema:
                type: string
          content: {}
  '/issues/{issue_id}/watchers.{format}':
    post:
      tags:
        - Issues
      summary: Adding a watcher
      parameters:
        - name: issue_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: number
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      requestBody:
        description: user_id
        content:
          application/json:
            schema:
              required:
                - user_id
              type: object
              properties:
                user_id:
                  type: string
                  description: id of the user to add as a watcher
        required: false
      responses:
        '200':
          description: Success
          content: {}
      x-codegen-request-body-name: BodyJson
  '/issues/{issue_id}/watchers/{user_id}.{format}':
    delete:
      tags:
        - Issues
      summary: Removing a watcher
      parameters:
        - name: issue_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: number
        - name: user_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: number
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
  '/issue_statuses.{format}':
    get:
      tags:
        - Issues
      summary: Returns possible Status Values for Issues
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
  '/trackers.{format}':
    get:
      tags:
        - Trackers
      summary: Returns possible Values for Trackers
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
  '/Users.{format}':
    get:
      tags:
        - Users
      summary: Returns Users
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
  '/enumerations/{type}.{format}':
    get:
      tags:
        - Enumerations
      summary: Returns enum for given Type
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
        - name: type
          in: path
          description: Enumeration Type
          required: true
          schema:
            type: string
            default: issue_priorities
            enum:
              - issue_priorities
              - time_entry_activities
              - document_categories
      responses:
        '200':
          description: Success
          content: {}
  '/projects.{format}':
    get:
      tags:
        - Projects
      summary: Listing projects
      description: >-
        Returns all projects (all public projects and private projects where
        user have access to)
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
        - name: include
          in: query
          description: >
            fetch associated data (optional). Possible values: trackers,
            issue_categories, enabled_modules (since 2.6.0).

            Values should be separated by a comma ",".
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - limit
                  - offset
                  - projects
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  total_count:
                    type: integer
                  offset:
                    type: integer
                  limit:
                    type: integer
    post:
      tags:
        - Projects
      summary: Creating a project
      description: Creates a the project.
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
  '/projects/{project_id}.{format}':
    get:
      tags:
        - Projects
      summary: Showing a project
      description: Returns the project of given id or identifier.
      parameters:
        - name: project_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: string
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
    put:
      tags:
        - Projects
      summary: Updating a project
      description: Updates the project of given id or identifier.
      parameters:
        - name: project_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: string
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
    delete:
      tags:
        - Projects
      summary: Deleting a project
      description: Deletes the project of given id or identifier.
      parameters:
        - name: project_id
          in: path
          description: The user identifier number
          required: true
          schema:
            type: string
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: Success
          content: {}
  '/my/account.{format}':
    get:
      tags:
        - MyAccount
      summary: Shows Account data
      description: Returns the Users Account data.
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - MyAccount
      summary: Updates Account data
      description: Updates the Users Account data.
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: User Scheme
              required:
                - user
              type: object
              properties:
                user:
                  title: User
                  required:
                    - project_id
                    - status_id
                    - tracker_id
                  type: object
                  properties:
                    login:
                      type: string
                    admin:
                      type: boolean
                    firstname:
                      type: string
                    lastname:
                      type: string
                    mail:
                      type: string
                    custom_fields:
                      type: array
                      items:
                        $ref: '#/components/schemas/IdName'
                  description: ''
              description: ''
              externalDocs:
                description: aaaa
                url: 'http://www.google.com'
        required: false
      responses:
        '200':
          description: Success
          content: {}
  '/time_entries.{format}':
    get:
      tags:
        - TimeEntries
      summary: Shows Time entries
      description: Returns Time entries.
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
        - name: project_id
          in: query
          description: The user identifier number
          schema:
            type: integer
        - name: offset
          in: query
          description: The user identifier number
          schema:
            type: integer
        - name: limit
          in: query
          description: The user identifier number
          schema:
            type: integer
        - name: user_id
          in: query
          description: The user identifier number
          schema:
            type: integer
        - name: spent_on
          in: query
          description: The user identifier number
          schema:
            type: string
        - name: issue_id
          in: query
          description: The user identifier number
          schema:
            type: integer
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      tags:
        - TimeEntries
      summary: Creates Time entry
      description: Creates a new Time entry.
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: Time entry Schema
              type: object
              properties:
                time_entry:
                  title: Time Entry
                  required:
                    - issue_id
                    - hours
                  type: object
                  properties:
                    hours:
                      type: integer
                    issue_id:
                      type: integer
                    spent_on:
                      type: string
                    activity_id:
                      type: integer
                    comments:
                      type: string
                    user_id:
                      type: integer
              description: ''
              externalDocs:
                description: ''
                url: 'https://www.redmine.org/projects/redmine/wiki/Rest_TimeEntries'
        required: false
      responses:
        '200':
          description: Success
          content: {}
  '/time_entries/{entry_id}.{format}':
    put:
      tags:
        - TimeEntries
      summary: Updates Time entry
      description: Updates the Users Account data.
      parameters:
        - name: format
          in: path
          description: json or xml
          required: true
          schema:
            type: string
            default: json
            enum:
              - json
              - xml
        - name: entry_id
          in: path
          description: id of the entry to update
          required: true
          schema:
            type: integer
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: Time entry Schema
              type: object
              properties:
                time_entry:
                  title: Time Entry
                  required:
                    - issue_id
                    - hours
                  type: object
                  properties:
                    hours:
                      type: integer
                    issue_id:
                      type: integer
                    spent_on:
                      type: string
                    activity_id:
                      type: integer
                    comments:
                      type: string
                    user_id:
                      type: integer
              description: ''
              externalDocs:
                description: ''
                url: 'https://www.redmine.org/projects/redmine/wiki/Rest_TimeEntries'
        required: false
      responses:
        '200':
          description: Success
          content: {}
components:
  schemas:
    Issue:
      required:
        - author
        - created_on
        - description
        - done_ratio
        - id
        - priority
        - project
        - start_date
        - status
        - subject
        - tracker
        - updated_on
      type: object
      properties:
        id:
          type: integer
        project:
          $ref: '#/components/schemas/IdName'
        tracker:
          $ref: '#/components/schemas/IdName'
        status:
          $ref: '#/components/schemas/IdName'
        priority:
          $ref: '#/components/schemas/IdName'
        author:
          $ref: '#/components/schemas/IdName'
        subject:
          type: string
        description:
          type: string
        start_date:
          type: string
        done_ratio:
          type: string
        created_on:
          type: string
          format: date-time
        updated_on:
          type: string
          format: date-time
    IdName:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Project:
      required:
        - created_on
        - description
        - id
        - identifier
        - name
        - status
        - updated_on
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        identifier:
          type: integer
        description:
          type: integer
        status:
          type: integer
        is_public:
          type: boolean
        trackers:
          type: array
          items:
            type: string
        issue_categories:
          type: array
          items:
            type: string
        created_on:
          type: string
          format: date-time
        updated_on:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        admin:
          type: boolean
        firstname:
          type: string
        lastname:
          type: string
        mail:
          type: string
          format: date-time
        created_on:
          type: string
          format: date-time
        last_login_on:
          type: string
          format: date-time
        api_key:
          type: string
  parameters:
    format:
      name: format
      in: path
      description: json or xml
      required: true
      schema:
        type: string
        default: json
        enum:
          - json
          - xml
    issue_id:
      name: issue_id
      in: path
      description: The user identifier number
      required: true
      schema:
        type: number
    user_id:
      name: user_id
      in: path
      description: The user identifier number
      required: true
      schema:
        type: number
    project_id:
      name: project_id
      in: path
      description: The user identifier number
      required: true
      schema:
        type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Redmine-API-Key
      in: header
    BasicAuth:
      type: http
      scheme: basic
x-a127-config: {}
x-a127-services: {}
